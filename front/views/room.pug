extends layout

block content
    h1= title
    ul#messages
    form#form(action="" style="display:block;")
        p name
            input#name(type="text" autocomplete="off" placeholder="Type your message here")
        p message
            input#input(type="text" autocomplete="off" placeholder="Type your message here" required)
            button Send
    script(src="/socket.io/socket.io.js")
    script(src="app.js")
    script.
        var socket = io();
        var username = new URLSearchParams(window.location.search).get('username');  // URL에서 사용자 이름 가져오기

        // username이 없으면 index 페이지로 리디렉션
        if (!username) {
            alert("Username is required.");
            window.location.href = '/';  // username이 없으면 다시 index 페이지로 리디렉션
        }

        var form = document.getElementById('form');
        var input = document.getElementById('input');
        var name = document.getElementById('name');
        var messages = document.getElementById('messages');
        
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            if (name && input.value && username) {
                alert(input.value);
            }
            if (input.value && username) {
                // 클라이언트에서 메시지를 Spring 서버로 전송
                fetch('http://localhost:8080/api/send-message', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ user: username, message: input.value })
                })
                .then(response => response.json())
                .then(data => {
                    // 서버로 메시지가 전달되면 입력 필드를 비우고 메시지 전송
                    input.value = '';
                    
                })
                .catch(error => console.error('Error sending message to Spring Boot:', error));
            }
        });

        // 서버에서 보낸 메시지를 클라이언트에 실시간으로 전달
        socket.on('chat message', function(data) {
            //alert("서버에서 메시지를 받았습니다:", data.user, "-", data.message);
            var item = document.createElement('li');
            item.textContent = data.user + ': ' + data.message;
            messages.appendChild(item);
            window.scrollTo(0, document.body.scrollHeight);
        });
